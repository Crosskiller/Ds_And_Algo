import java.util.*;

 
class Main2
{
	public static PriorityQueue<Integer> min, max;
	public static void findMedian(int a[])
	{
		int min_len = a.length/2;
		int max_len = a.length-min_len;
		max.add(a[0]);
		for(int i=1; i<a.length; i++)
		{
			if(a[i]<max.peek())
			{
				if(max.size()==max_len)
				{
					min.add(max.poll());
				}
				max.add(a[i]);
			}
			else if(!min.isEmpty())
			{
				if(a[i]>min.peek())
				{
					if(min.size()==min_len)
					{
						max.add(min.poll());
					}
					min.add(a[i]);
				}
				else
				{
					if(max.size()==max_len)
					{
						min.add(max.poll());
					}
					max.add(a[i]);
				}
			}
			else
				min.add(a[i]);
			
		}
	}
	public static void main(String args[])
	{
		Scanner in = new Scanner(System.in);
		max = new PriorityQueue<Integer>(new Comparator<Integer>(){      // make maxHeap
			public int compare(Integer a, Integer b)
			{
				if(a>b)
					return -1;
				return 1;
			}
		});
		min = new PriorityQueue<Integer>();          // priorityQueue default is minHeap
		System.out.println("Enter size of array:");
		int n = in.nextInt();
		int a[] = new int[n];
		System.out.printf("Enter Data:");
		for(int i=0; i<n; i++)
			a[i] = in.nextInt();
		findMedian(a);
		if(a.length%2==0)
			System.out.println((max.peek()+min.peek())/2);
		else
			System.out.println(max.peek());
		
		
	}
}