class Graph
{
	public int vc, matrix[][];
	public boolean visited[];
	public Graph(int n)
	{
		vc = n;
		matrix = new int[n][n];
		visited = new boolean[n];
	}
	public void addEdge(int a, int b)
	{
		matrix[a-1][b-1] = 1;
		matrix[b-1][a-1] = 1;
	}
	public int getAdjVertex(int a)
	{
		for(int i=0; i<vc; i++)
		{
			if(matrix[a][i]==1 && !visited[i])
				return i;
		}
		return -1;
	}
	public void dfs()
	{
		Stack<Integer> st = new Stack<Integer>();
		st.push(0);
		visited[0] = true;
		while(!st.isEmpty())
		{
			int v = getAdjVertex(st.peek());
			if(v!=-1)
			{
				st.push(v);
				visited[v] = true;
			}
			else
			{
				st.pop();
			}
			
		}
	}
}