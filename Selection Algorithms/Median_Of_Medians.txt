import java.util.*;


class Main
{
	public static void swap(int a[], int i, int j)
	{
		int t = a[i];
		a[i] = a[j];
		a[j] = t;
	}
	public static int partition(int a[], int low, int high, int m)
	{
		int pos=0;
		while(low<high)
		{
			while(low<=high && a[low]<=m)
			{
				if(a[low]==m)
					pos = low;
				low++;
			}
			while(low<=high && a[high]>m)
				high--;
			if(low<high)
				swap(a,low,high);
		}
		a[pos] = a[high];
		a[high] = m;
		return pos;
	}
	public static int Selection(int a[], int k, int low, int high)
	{
		int n = high-low+1;
		int b[] = new int[(int)Math.ceil(n/5.0)];
		int pos = low, pos1=0;
		while(pos<=high)
		{
			int i;
			for(i = pos+1; i<pos+5 && i<=high; i++)
			{
				int j = i, temp = a[i];
				while( j>0 && temp<a[j-1])
				{
					a[j] = a[j-1];
					j--;
				}
				a[j] = temp;
			}
			if(pos+4<=high)
				b[pos1++] = a[pos+2];
			else
				b[pos1++] = a[pos+(high-pos)/2];
			pos = i;
		}
		Arrays.sort(b);
		for(int i=0; i<b.length; i++)
			System.out.print(b[i]+" ");
		int m = b[b.length/2];
		System.out.println("--------"+m);
		int q = 0;
		for(int i=low; i<=high; i++)
		{
			if(a[i]<m)
				q++;
		}
		int pt;
		if(k==q+1)
		{
			return m;
		}
		else
		{
			pt = partition(a, low, high, m); 
		}
		if(k>q+1)
		{
			return Selection(a,k-(q+1),pt+1,high);
		}
		else if(k<q+1)
		{
			return Selection(a,k,low,pt-1);
		}
		return 0;
	}
	public static void main(String[] args) 
	{
		int a[] = {9,5,1,11,6,4,10,3,7,8,2};
		int k = 7;
		System.out.println(Selection(a,k,0,a.length-1));
	}
}
    