import java.util.*;

class Heap
{
	public int a[], count;
	public Heap(int ar[])
	{
		a = new int[ar.length];
		for(int i=0; i<ar.length; i++)
			a[i] = ar[i];
		count = ar.length;
	}
	public int leftChild(int i)
	{
		int left = 2*i+1;
		if(left<count)
			return left;
		return -1;
	}
	public int rightChild(int i)
	{
		int right = 2*i+2;
		if(right<count)
			return right;
		return -1;
	}
	public void perlocateDown(int i)
	{
		int l, r, min = i;
		l = leftChild(i);
		r = rightChild(i);
		if(l!=-1 && a[l]<a[min])
			min = l;
		if(r!=-1 && a[r]<a[min])
			min = r;
		if(min!=i)
		{
			int t = a[min];
			a[min] = a[i];
			a[i] = t;
		}
		else
			return;
		perlocateDown(min);
	}
	public void heapify()
	{
		for(int i = count/2-1; i>=0; i--)
			perlocateDown(i);
	}
	public void HeapSort()
	{
		heapify();
		int n = count;
		//System.out.println(count);
		for(int i=0; i<n; i++)
		{
			perlocateDown(0);
			System.out.println(a[0]);
			a[0] = a[count-1];
			count--;
		}
	}
}
class Main
{
		public static void main(String[] args) 
		{
			Scanner in = new Scanner(System.in);
			int a[] = {2,5,3,4,6,1,7};
			Heap h = new Heap(a);
			h.HeapSort();
		}
}

    
    
    
    
    
    
 
    
 
                
                
        
            
            
 
  
 
  
  
 
 
   
 
     